<#@ template debug="true" hostspecific="true" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ assembly name="System.Data" #>
<#@ assembly name="System.Data.Linq"#>
<#@ assembly name="System.Data.Common"#>
<#@ assembly name="EnvDTE" #>
<#@ assembly name="System.Xml"#>
<#@ assembly name="System.Xml.Linq"#>
<#@ import namespace="System" #>
<#@ import namespace="System.CodeDom"#>
<#@ import namespace="System.CodeDom.Compiler"#>
<#@ import namespace="System.Collections" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Data"#>
<#@ import namespace="System.Data.Linq"#>
<#@ import namespace="System.Data.Linq.Mapping"#>
<#@ import namespace="System.IO"#>
<#@ import namespace="System.Linq"#>
<#@ import namespace="System.Reflection"#>
<#@ import namespace="System.Text"#>
<#@ import namespace="System.Xml.Linq"#>
<#@ import namespace="Microsoft.VisualStudio.TextTemplating"#>
<#@ output encoding="utf-8" #>
<#
    var connectionString = "Host=localhost;Database=thea;Username=postgres;Password=123456;Maximum Pool Size=20;SearchPath=public";
    var dbProvider = new PostgreSqlProvider(connectionString);
    var manager = Manager.Create(Host, GenerationEnvironment);

    var tableSchema = "public";
    var tableNames = new[]{"sys_user","sys_role","sys_user_role","sys_resource","sys_authorization",
    "sys_lookup","sys_lookup_value","sys_group","sys_data","sys_user_group","mds_cluster","mds_binding",
    "mds_log","res_rule","res_rule_parameter"};
    var removePrefixes = new[]{"sys_","mds_","res_"};
    var separator = '_';
    var tableList = dbProvider.GetTableList(tableSchema, tableNames);
    foreach(var tableInfo in tableList)
    {
        var tableName = tableInfo.TableName;
        var className = dbProvider.ToClassName(tableName, removePrefixes, separator);
	    var columnList = dbProvider.GetColumnList(tableSchema, tableName);
    	manager.StartNewFile(className + ".cs");
#>
using System;

namespace WebAppTest.Domain.Models;

/// <summary>
/// <#=tableInfo.Description#>
/// </summary>
public class <#=className#>
{
<#foreach(ColumnInfo columnInfo in columnList){
var propertyName = columnInfo.ColumnName;
var segments = propertyName.Split('_');
propertyName = string.Join("", segments.Select(f => dbProvider.ToBigCamel(f)));
var memberInfo = dbProvider.MapMember(columnInfo);
if(!String.IsNullOrEmpty(columnInfo.Description))
{#>
    /// <summary>
    /// <#=columnInfo.Description#>
    /// </summary>
<#}#>
<#if(columnInfo.IsPrimaryKey){#>
<#}#>
    public <#=memberInfo.MemberType#> <#=propertyName#> { get; set; }
<#}#>
}
<#
manager.EndBlock();
}
manager.Process(true);
#>
<#@ include file="$(ProjectDir)\Manager.ttinclude" once="true"#>
<#@ include file="$(ProjectDir)\DbEntitries.ttinclude" once="true"#>
<#@ include file="PostgreSqlProvider.ttinclude" once="true"#>